version: '3.8'

services:
  crm-app:
    # Solución más simple y directa: usar una imagen oficial de Node.js
    image: node:18-slim
    # Comando para iniciar un servidor HTTP simple
    # Escapamos el símbolo $ con otro $ para evitar la interpolación de Docker Compose
    command: >
      sh -c "echo '<!DOCTYPE html>
      <html>
      <head>
          <title>CRM Probolsas</title>
          <style>
              body { font-family: Arial; margin: 40px; line-height: 1.6; }
              h1 { color: #0066cc; }
              .success { background: #d4edda; color: #155724; padding: 15px; border-radius: 4px; }
          </style>
      </head>
      <body>
          <h1>CRM Probolsas - Servidor Funcionando</h1>
          <div class=\"success\">
              ¡El servidor Node.js está funcionando correctamente!
          </div>
          <p>Esta es una página de prueba servida directamente desde un servidor Node.js.</p>
          <p>Fecha y hora del servidor: $$(date)</p>
      </body>
      </html>' > index.html && npm install -g http-server && http-server -p 3000"
    ports:
      - "3000:3000"
    networks:
      - probolsas
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.crm.rule=Host(`ippcrm.probolsas.co`)"
        - "traefik.http.routers.crm.entrypoints=websecure"
        - "traefik.http.routers.crm.tls.certresolver=letsencrypt"
        - "traefik.http.services.crm.loadbalancer.server.port=3000"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  probolsas:
    external: true
